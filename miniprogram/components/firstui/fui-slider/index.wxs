// 本文件由FirstUI授权予闫弘宇（手机号：13 5100 01 5    5   3，身份证尾号：  0  3361 2）专用，请尊重知识产权，勿私下传播，违者追究法律责任。
var slider = {
	width: 240,
	blockWidth: 24,
	step: 1,
	min: 0,
	max: 100,
	disabled: false,
	section: false,
	start: 0,
	end: 0,
	drag: false
}

function bool(str) {
	return str === 'true' || str == true ? true : false
}

function format(value) {
	return Math.round(Math.max(slider.min, Math.min(value, slider.max)) / slider.step) * slider.step;
}

function setInitValue(dataset, isChange) {
	slider.drag = false
	slider.width = +dataset.width
	slider.blockWidth = +dataset.blockwidth
	slider.step = +dataset.step
	slider.min = +dataset.min
	slider.max = +dataset.max
	slider.disabled = bool(dataset.disabled)
	slider.section = bool(dataset.section)
	slider.start = format(+dataset.value)
	slider.end = format(+dataset.end)
}

function touchstart(e, ins) {
	var state = e.instance.getState()
	var touch = e.touches[0] || e.changedTouches[0];
	var dataset = e.instance.getDataset()
	state.startX = touch.clientX
	setInitValue(dataset)
}

function sectionTouchstart(e, ins) {
	var state = e.instance.getState()
	var touch = e.touches[0] || e.changedTouches[0];
	var dataset = e.instance.getDataset()
	state.sectionStartX = touch.clientX
	setInitValue(dataset)
}

function changeValue(value, isStart, isEnd, ins) {
	var params = {
		value: value,
		isStart: isStart
	}
	if (isEnd) {
		ins.callMethod('change', params)
	} else {
		ins.callMethod('changing', params)
	}
}

function styleChange(value, ins, isEnd, state) {
	if (!ins) return;
	value = format(value);
	if (slider.section) {
		value = value > slider.end ? slider.end : value;
	}
	changeValue(value, true, isEnd, ins)
	var dvalue = slider.max - slider.min;
	var maxWidth = slider.width - slider.blockWidth;
	var width = (value - slider.min) / dvalue * maxWidth;
	var block = ins.selectComponent('.fui-slider__handle-left');
	var glided = ins.selectComponent('.fui-slider__pole-left');
	if (state) {
		state.lastLeft = width
	}
	block.setStyle({
		transform: 'translate3d(' + width + 'px,0,0)',
		'z-index': value === slider.max ? 5 : 3
	})
	glided.setStyle({
		width: width + 'px'
	})
}

function styleSectionChange(value, ins, isEnd, state) {
	if (!ins) return;
	value = format(value);
	var total = slider.max + slider.min;
	var val = total - value;
	val = val < slider.start ? slider.start : val;
	value = total - val;
	changeValue(val, false, isEnd, ins)
	var dvalue = slider.max - slider.min;
	var maxWidth = slider.width - slider.blockWidth;
	var width = (value - slider.min) / dvalue * maxWidth;
	var block = ins.selectComponent('.fui-slider__handle-right');
	var glided = ins.selectComponent('.fui-slider__pole-right');
	if (state) {
		state.lastSectionLeft = width
	}
	block.setStyle({
		transform: 'translate3d(-' + width + 'px,0,0)'
	})
	glided.setStyle({
		width: width + 'px'
	})
}

function touchmove(e, ins) {
	if (slider.disabled) return;
	if (e.preventDefault) {
		// 阻止页面滚动
		e.preventDefault()
	}
	var state = e.instance.getState()
	var touch = e.touches[0] || e.changedTouches[0]
	var pageX = touch.clientX;
	slider.drag = true
	var left = pageX - state.startX + (state.lastLeft || 0);
	left = left < 0 ? 0 : left;
	var maxWidth = slider.width - slider.blockWidth;
	left = left >= maxWidth ? maxWidth : left;
	var dvalue = slider.max - slider.min;
	var value = (left / maxWidth) * dvalue + slider.min;
	state.startX = pageX
	state.lastLeft = left
	styleChange(value, ins, false)
}

function sectionTouchmove(e, ins) {
	if (slider.disabled) return;
	if (e.preventDefault) {
		// 阻止页面滚动
		e.preventDefault()
	}
	var state = e.instance.getState()
	var touch = e.touches[0] || e.changedTouches[0]
	var pageX = touch.clientX;
	slider.drag = true
	var left = state.sectionStartX - pageX + (state.lastSectionLeft || 0);
	left = left < 0 ? 0 : left;
	var maxWidth = slider.width - slider.blockWidth;
	left = left >= maxWidth ? maxWidth : left;
	var dvalue = slider.max - slider.min;
	var value = (left / maxWidth) * dvalue + slider.min;
	state.sectionStartX = pageX
	state.lastSectionLeft = left
	styleSectionChange(value, ins, false)
}

function touchend(e, ins) {
	if (slider.disabled) return;
	if (slider.drag) {
		var state = e.instance.getState()
		var maxWidth = slider.width - slider.blockWidth;
		var dvalue = slider.max - slider.min;
		var value = (state.lastLeft / maxWidth) * dvalue + slider.min;
		styleChange(value, ins, true, state)
	}
}



function sectionTouchend(e, ins) {
	if (slider.disabled) return;
	if (slider.drag) {
		var state = e.instance.getState()
		var maxWidth = slider.width - slider.blockWidth;
		var dvalue = slider.max - slider.min;
		var value = (state.lastSectionLeft / maxWidth) * dvalue + slider.min;
		styleSectionChange(value, ins, true, state)
	}
}

function slidevalue(value, oldValue, owner, ins) {
	var state = ins.getState()
	state.startX = 0;
	state.lastLeft = 0;
	var dataset = ins.getDataset()
	setInitValue(dataset)
	styleChange(value, owner, true, state)
}

function sectionSlidevalue(value, oldValue, owner, ins) {
	var state = ins.getState()
	state.sectionStartX = 0;
	state.lastSectionLeft = 0;
	var dataset = ins.getDataset()
	setInitValue(dataset)
	value = slider.max - value + slider.min
	styleSectionChange(value, owner, true, state)
}

module.exports = {
	touchstart: touchstart,
	touchmove: touchmove,
	touchend: touchend,
	slidevalue: slidevalue,
	sectionTouchstart: sectionTouchstart,
	sectionTouchmove: sectionTouchmove,
	sectionTouchend: sectionTouchend,
	sectionSlidevalue: sectionSlidevalue
}